#include <stdio.h>

#define MAX 10
#define INF 9999

int cost[MAX][MAX];
int n;

void prim() {
    int selected[MAX] = {0};
    int edgeCount = 0;
    int minCost = 0;

    selected[0] = 1;

    printf("\nEdges in the Minimum Spanning Tree:\n");

    while (edgeCount < n - 1) {
        int min = INF;
        int u = -1, v = -1;

        for (int i = 0; i < n; i++) {
            if (selected[i]) {
                for (int j = 0; j < n; j++) {
                    if (!selected[j] && cost[i][j] < min) {
                        min = cost[i][j];
                        u = i;
                        v = j;
                    }
                }
            }
        }

        if (u != -1 && v != -1) {
            printf("Edge %d: (%d - %d) cost = %d\n", edgeCount + 1, u, v, min);
            selected[v] = 1;
            minCost += min;
            edgeCount++;
        }

        cost[u][v] = cost[v][u] = INF;
    }

    printf("\nTotal cost of Minimum Spanning Tree = %d\n", minCost);
}

int main() {
    printf("Enter the number of vertices: ");
    scanf("%d", &n);

    printf("Enter the cost adjacency matrix:\n");
    printf("(Use %d to represent no direct connection between vertices)\n", INF);

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            scanf("%d", &cost[i][j]);
        }
    }

    prim();

    return 0;
}
